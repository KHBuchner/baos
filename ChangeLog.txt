
BAOS SDK Release Notes and Change Log
=====================================

Release BAOS-SDK-16.1.1 (2018-02-01)
------------------------------------

[GH-2]        - Fixed kdrive/BaosEnumerator: Fix wrong data length of manufacturer ID
[GH-3]        - Fixed BaosDatapoint::setDateLocal() and BaosDatapoint::setDateUTC() used wrong format for year
                (since BAOS-SDK-16.1.0)
[]            - Updated some documentaion stuff


Release BAOS-SDK-16.1.0 (2016-02-29)
------------------------------------

[KDRIVE-1039] - Added implementation for BAOS 777 (New server items, services Get/Set Timers, ...)
[KDRIVE-1045] - Renamed BAOS error BufferToSmall to BufferTooSmall
[KDRIVE-1052] - Added ServerItemEvent in BaosEvent
[KDRIVE-1067] - Fixed for protocol 1.2 handle GetDescriptionString_Res with string length zero.
                When description string is deactivate in database then each string a hard-coded length of 0 bytes.
[KDRIVE-1069] - Fixed BaosDatapoint::isValidFlag returns the update flag and not the valid flag
[KDRIVE-1090] - Baos ft1.2: Added version detection via PEI_Identify
[]            - ...

Release BAOS-SDK-15.1.0 (2015-04-24)
------------------------------------

Released to github!

[KDRIVE-574] - Added implementation for BAOS Serial via FT1.2 (protocol version 1.2 and 2.0)
             - Migrated kdrive rpc baos code to C++11
             - Restructure of kdrive baos and usage of Connector functions open, close, ...
             - Added heartbeat to steam connector (before was handled by own class BaosHeartbeat,
               now internal by StreamConnector)
             - Added BaosConnection and mark the StreamConnection as deprecated
             - ...
             - For more information see also the Migrate Guide

Release kdriveBAOS-14.1.1p1 (2014-08-06)
--------------------------------------
[KDRIVE-969] - Added support for BAOS connection with port for NAT connections

Release kdriveBAOS-14.1.1 (2014-02-13)
--------------------------------------

Release kdriveBAOS-14.1.0 (2014-02-03) (not released)
-----------------------------------------------------

[KDRIVE-836] - Changed: Now clear the datapoint descriptor holder after open a connection
[KDRIVE-822] - Extend BAOS C# sample: Added a editbox to set the IP address of the baos device
[KDRIVE-882] - Added support for Qt5
[GENERAL-50] - Migrated to poco-1.4.6p2

Release kdriveBAOS-13.1.1 (2013-03-21)
--------------------------------------

[KDRIVE-784] - Fixed race condition in stop CallbackThread which could cause in the worst case an access
               violation. It occurs if a sync event was after an previous failed wait (e.g. timeout) not
               auto reset. [fixed also KDRIVE-547]
               (Only kdriveBAOS BaosHeartbeat affected. Now no other kdrive libraries use the sleep option)
[KDRIVE-785] - BaosHeartbeat: Fixed the CallbackThread waitSync on start thread failed with an timeout.
               Before the thread sends an sync event it sleeps the BaosHeartbeat time interval
[KDRIVE-787] - Fixed race condition in ActiveFunction::stopFromWithinCallback which could cause in the worst
               case an access violation. It occurs if the thread has not enough time to stop and in the
               meantime destroy the destructor the CallbackThread
               (Only the sample kdriveBAOS MultiConnector affected. Now no other kdrive libraries /sample
               use ActiveFunction::stopFromWithinCallback)
[KDRIVE-788] - Disabled some unused poco components

Release kdriveBAOS-13.1.0 (2013-03-14)
--------------------------------------

[KDRIVE-736] - .net wrapper: Release unmanaged resources additionally in the finalizer.
               So the garbage collector release it when the user forgot release it manually
[KDRIVE-772] - Convert in the BAOS .net wrapper project the doxygen comments into microsoft xml
               comments. So it is possible to generate intellisense file for Visual Studio
[KDRIVE-773] - vb.net samples: Set the platform target to x86
[KDRIVE-774] - c# and vb.net samples: Added solution and project files for Visual Studio 2010
               and Visual Studio 2012
[KDRIVE-775] - Fixed .net samples: Call kdrive.Logger.Shutdown() in the finally block to
               ensure it's really shutdown. Otherwise it's possibile that the application crash on
               closing if the logger wasn't shutdown before the application closed
[KDRIVE-776] - Added support for VS 2012: Sets _VARIADIC_MAX to 10 for VS 2012 in the CMake file
[KDRIVE-779] - BaosEnumerator: Set the IP time to live (TTL) in the SEARCH_REQUEST to 16
              (before TTL was 1, 16 is the also the default value in our KNXnet/IP devices)

Release kdriveBAOS-12.9.0 (2012-12-20) (not released)
-----------------------------------------------------

[KDRIVE-732] - Added .net wrapper for ServerItems
[KDRIVE-733] - Added .net wrapper for BaosDatapointDescriptions
[KDRIVE-734] - Implemented function (getWebServicesProtocolVersion) for get server item Protocol
               Version (WebService)
[KDRIVE-735] - Set function BaosServerItems::getProtocolVersion as deprecated and added instead
               function BaosServerItems::getBinaryProtocolVersion, because the function is not
               unique with getWebServicesProtocolVersion
[KDRIVE-739] - Updated the document for the baos protocol version 2.0
[KDRIVE-740] - Extended the exception handling for the baos server errors. Added for each baos
               server error an separate exception
[KDRIVE-741] - Added support for reading all datapoint descriptions from the device

Release kdriveBAOS-12.8.0 (2012-10-24)
--------------------------------------

[KDRIVE-549] - Samples BAOS C# samples: Set the platform target to x86
[KDRIVE-717] - Fixed build system for iOS to disable stat64 (i.e. POCO_NO_STAT64)
[KDRIVE-718] - Migrated to poco-1.4.4

Release kdriveBAOS-12.1.1 (2012-03-26)
--------------------------------------
[KDRIVE-547] - Under Linux: if a boost signal is called from a destructor it is possible to receive
               an assertion (or even segmentation fault). This tends to happen with either the
               ScopedBaosHeartbeat or the ScopedStreamConnection that use the RAII idiom to stop
               within the destructor. A workaround is to call stop before the destructor is called.
               Added this workaround to the EventListener sample.

Release kdriveBAOS-12.1.0 (2012-03-22)
--------------------------------------

[KDRIVE-467] - Added event for isConnected in Baos Event like in StreamConnector.
               Added the events in the C# bindings.
[KDRIVE-468] - Added event handling (bus connected and connection status)
               in the kdriveBaos samples for both C++ and C#
[KDRIVE-469] - Used datapoint formatters instead of the deprecated formatters in kdriveKnx.
[KDRIVE-489] - Removed Boost from the SDK. Added a separate download for Boost header files
[KDRIVE-498] - Added support for Valid flag. This is in the state byte of the
               DatapointValue.Res and is only available for 711/772
[KDRIVE-519] - Added support for 2 byte float temperature value in PushButtonDemo
[KDRIVE-520] - Added support in PushButtonDemo to read the baos configuration
               to ensure that the correct datapoints have been configured
[KDRIVE-521] - Added support for datapoint value conversions to kdriveExpress
[KDRIVE-528] - Fixed C# sample: The datapoint event handler is in is in the context
               of the notification thread. It is not safe to update the gui there.
               Use Invoke to emit it in the main thread.
[KDRIVE-530] - Created cut-down poco without data and zip
[KDRIVE-531] - Used kdriveLogger.h from bindings/csharp/core

Release kdriveBAOS-2.0 (2011-02-01)
-----------------------------------

- Added implementation for BAOS Protocol 2.0
- Added BaosEvent class.
- BaosDatapoint.h. Added readNewValueViaBus and clearTransmissionState
- Server Item: Renamed state to serviceData (serviceData can either be length or
  state, depending on the service). Updated .NET bindings to reflect this change.
- Protocol: Renamed ServerItemEncoder to SetServerItemEncoder.
  Added GetDatapointValueEncoder. Added SetDatapointValueEncoder
- GetDatapointValue Service: Added filter
- Bug Fix: BAOS Enumeration. It was possible to add a IP Interface as a BAOS
  device, if its search response followed a BAOS search response
  (needed a check for response length).
- Throw an ClientException Connection not availible if the rx thread is not running
- Added throw to exception handling in the baos connector for tx. Was previously swallowed.
- Add exception handling to handle the fact that .net doesn't call the destructor in raii
  idioms when crossing the module boundary.
- Added kdriveUtility library, which includes Logging and PropertyCollection
- Set protocol timeout to 1000ms (was 6000ms)
- .NET bindings: added shutdown function. Caused a crash if the logger wasn't
  shutdown before the application closed.
- Added enumeration to baos .net stream connection
- kdriveConnector: Reworked the callback thread. Moved the signals back into the
  callback thread. Added a thread id. Added start/stop functions to active function.
- Moved hex formatting from PacketTrace into LoggerFormatter
- C++ PushButton Sample: handle connection after enumeration. Using BaosEvent
  Changed the push button demo images to png. jpg not supported by Qt out of the box.
- C# PushButton Sample: Added check for null. Happens when create connection fails.
- C++ PushButton Sample: Call destroyConnection on disconnected signal. (e.g after the TCP-Connection was broken)
- poco: upgraded to 1.4.0
- removed pre-compiled .NET binaries for 2008 SP1

Release kdriveBAOS-1.2 (2010-10-27)
-----------------------------------
- Added Visual Basic sample
- Added pre-compiled .NET binaries for 2008 SP1

Release kdriveBAOS-1.1 (2010-10-19)
-----------------------------------
- Added iOS sample and Quick Start Guide
- Fixed poco compile error for iOS (stat64)

Release kdriveBAOS-1.0 (2010-10-04)
-----------------------------------
- Initial Public Release of the kdriveBAOS C++ SDK.
